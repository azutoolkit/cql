import{_ as e,o as a,c as n,x as s,a as l,S as t}from"./app.19d9338b.js";import"./chunks/theme.a19b6002.js";const f=JSON.parse('{"title":"Cql::Record(T, Pk)","description":"","frontmatter":{"title":"Cql::Record(T, Pk)"},"headers":[{"level":2,"title":"Instance Methods","slug":"instance-methods","link":"#instance-methods","children":[{"level":3,"title":"def attributes(attrs : Hash(Symbol, DB::Any))","slug":"def-attributes-attrs-hash-symbol-db-any","link":"#def-attributes-attrs-hash-symbol-db-any","children":[]},{"level":3,"title":"def attributes","slug":"def-attributes","link":"#def-attributes","children":[]},{"level":3,"title":"def delete","slug":"def-delete","link":"#def-delete","children":[]},{"level":3,"title":"def id","slug":"def-id","link":"#def-id","children":[]},{"level":3,"title":"def id=(id : Pk)","slug":"def-id-id-pk","link":"#def-id-id-pk","children":[]},{"level":3,"title":"def persisted?","slug":"def-persisted","link":"#def-persisted","children":[]},{"level":3,"title":"def reload!","slug":"def-reload","link":"#def-reload","children":[]},{"level":3,"title":"def save","slug":"def-save","link":"#def-save","children":[]},{"level":3,"title":"def update(fields : Hash(Symbol, DB::Any))","slug":"def-update-fields-hash-symbol-db-any","link":"#def-update-fields-hash-symbol-db-any","children":[]},{"level":3,"title":"def update","slug":"def-update","link":"#def-update","children":[]},{"level":3,"title":"def update","slug":"def-update-1","link":"#def-update-1","children":[]}]}],"relativePath":"main/Cql/Record.md","lastUpdated":1723931959000}'),o={name:"main/Cql/Record.md"},p=s("div",null,[s("h1",{id:"module-cql-record-t-pk",tabindex:"-1"},[l("module Cql::Record(T, Pk) "),s("a",{class:"header-anchor",href:"#module-cql-record-t-pk","aria-hidden":"true"},"#")]),s("p",null,"Write documentation for Record module"),s("p",null,[s("strong",null,"Example"),l(" Using the Record module")]),s("div",{class:"language-crystal"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"crystal"),s("pre",{"v-pre":"",class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#FFCB6B"}},"AcmeDB"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Cql"),s("span",{style:{color:"#89DDFF"}},"::"),s("span",{style:{color:"#FFCB6B"}},"Schema"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"build"),s("span",{style:{color:"#89DDFF"}},"(:acme_db,"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},"adapter:"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Cql"),s("span",{style:{color:"#89DDFF"}},"::"),s("span",{style:{color:"#FFCB6B"}},"Adapter"),s("span",{style:{color:"#89DDFF"}},"::"),s("span",{style:{color:"#FFCB6B"}},"Postgres"),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#89DDFF"}},"uri:"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"postgresql://example:example@localhost:5432/example"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},")"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"do")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  table "),s("span",{style:{color:"#89DDFF"}},":posts"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"do")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    primary "),s("span",{style:{color:"#89DDFF"}},":id,"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Int64"),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},"auto_increment:"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FF9CAC"}},"true")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    text "),s("span",{style:{color:"#89DDFF"}},":title")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    text "),s("span",{style:{color:"#89DDFF"}},":body")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    timestamp "),s("span",{style:{color:"#89DDFF"}},":published_at")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"end")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  table "),s("span",{style:{color:"#89DDFF"}},":comments"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"do")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    primary")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    bigint "),s("span",{style:{color:"#89DDFF"}},":post_id")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    text "),s("span",{style:{color:"#89DDFF"}},":body")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"end")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF","font-style":"italic"}},"end")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF","font-style":"italic"}},"struct"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Post")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"include"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Cql"),s("span",{style:{color:"#89DDFF"}},"::"),s("span",{style:{color:"#FFCB6B"}},"Record"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#FFCB6B"}},"Post"),s("span",{style:{color:"#89DDFF"}},")")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  define "),s("span",{style:{color:"#FFCB6B"}},"AcmeDB"),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},":posts")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#82AAFF"}},"getter"),s("span",{style:{color:"#BABED8"}}," id "),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Int64"),s("span",{style:{color:"#BABED8"}},"?")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#82AAFF"}},"getter"),s("span",{style:{color:"#BABED8"}}," title "),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"String")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#82AAFF"}},"getter"),s("span",{style:{color:"#BABED8"}}," body "),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"String")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#82AAFF"}},"getter"),s("span",{style:{color:"#BABED8"}}," published_at "),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Time")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"def"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#82AAFF"}},"initialize"),s("span",{style:{color:"#89DDFF"}},"(@"),s("span",{style:{color:"#BABED8"}},"title "),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"String"),s("span",{style:{color:"#BABED8"}},", "),s("span",{style:{color:"#89DDFF"}},"@"),s("span",{style:{color:"#BABED8"}},"body "),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"String"),s("span",{style:{color:"#BABED8"}},", "),s("span",{style:{color:"#89DDFF"}},"@"),s("span",{style:{color:"#BABED8"}},"published_at "),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Time"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Time"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#BABED8"}},"utc"),s("span",{style:{color:"#89DDFF"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"end")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF","font-style":"italic"}},"end")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF","font-style":"italic"}},"struct"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Comment")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"include"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Cql"),s("span",{style:{color:"#89DDFF"}},"::"),s("span",{style:{color:"#FFCB6B"}},"Record"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#FFCB6B"}},"Comment"),s("span",{style:{color:"#89DDFF"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  define "),s("span",{style:{color:"#FFCB6B"}},"AcmeDB"),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},":comments")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#82AAFF"}},"getter"),s("span",{style:{color:"#BABED8"}}," id "),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Int64"),s("span",{style:{color:"#BABED8"}},"?")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#82AAFF"}},"getter"),s("span",{style:{color:"#BABED8"}}," post_id "),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Int64")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#82AAFF"}},"getter"),s("span",{style:{color:"#BABED8"}}," body "),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"String")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"def"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#82AAFF"}},"initialize"),s("span",{style:{color:"#89DDFF"}},"(@"),s("span",{style:{color:"#BABED8"}},"post_id "),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Int64"),s("span",{style:{color:"#BABED8"}},", "),s("span",{style:{color:"#89DDFF"}},"@"),s("span",{style:{color:"#BABED8"}},"body "),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"String"),s("span",{style:{color:"#89DDFF"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"end")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF","font-style":"italic"}},"end")]),l(`
`),s("span",{class:"line"})])])]),s("details",{class:"details custom-block"},[s("summary",null,"Table of Contents"),s("nav",{class:"table-of-contents"},[s("ul",null,[s("li",null,[s("a",{href:"#instance-methods"},"Instance Methods"),s("ul",null,[s("li",null,[s("a",{href:"#def-attributes-attrs-hash-symbol-db-any"},"def attributes(attrs : Hash(Symbol, DB::Any))")]),s("li",null,[s("a",{href:"#def-attributes"},"def attributes")]),s("li",null,[s("a",{href:"#def-delete"},"def delete")]),s("li",null,[s("a",{href:"#def-id"},"def id")]),s("li",null,[s("a",{href:"#def-id-id-pk"},"def id=(id : Pk)")]),s("li",null,[s("a",{href:"#def-persisted"},"def persisted?")]),s("li",null,[s("a",{href:"#def-reload"},"def reload!")]),s("li",null,[s("a",{href:"#def-save"},"def save")]),s("li",null,[s("a",{href:"#def-update-fields-hash-symbol-db-any"},"def update(fields : Hash(Symbol, DB::Any))")]),s("li",null,[s("a",{href:"#def-update"},"def update")]),s("li",null,[s("a",{href:"#def-update-1"},"def update")])])])])])])],-1),r=t(`<h2 id="instance-methods" tabindex="-1">Instance Methods <a class="header-anchor" href="#instance-methods" aria-hidden="true">#</a></h2><h3 id="def-attributes-attrs-hash-symbol-db-any" tabindex="-1">def attributes<code>(attrs : Hash(Symbol, DB::Any))</code> <a class="header-anchor" href="#def-attributes-attrs-hash-symbol-db-any" aria-hidden="true">#</a></h3><p>Set the record&#39;s attributes from a hash</p><ul><li><strong>@param</strong> attrs [Hash(Symbol, DB::Any)] The attributes to set</li><li><strong>@return</strong> [Nil]</li></ul><p><strong>Example</strong> Setting the record&#39;s attributes</p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">attributes </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{name:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Alice</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">email:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[email protected]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="def-attributes" tabindex="-1">def attributes <a class="header-anchor" href="#def-attributes" aria-hidden="true">#</a></h3><p>Define instance-level methods for querying and manipulating data Fetch the record&#39;s ID or raise an error if it&#39;s nil</p><ul><li><strong>@return</strong> [PrimaryKey] The ID</li></ul><p><strong>Example</strong> Fetching the record&#39;s ID</p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">attributes</span></span>
<span class="line"><span style="color:#82AAFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">id:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">name:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Alice</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">email:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> [email protected]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="def-delete" tabindex="-1">def delete <a class="header-anchor" href="#def-delete" aria-hidden="true">#</a></h3><p>Delete the record from the database</p><ul><li><strong>@return</strong> [Nil]</li></ul><p><strong>Example</strong> Deleting the record</p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">delete</span></span>
<span class="line"></span></code></pre></div><h3 id="def-id" tabindex="-1">def id <a class="header-anchor" href="#def-id" aria-hidden="true">#</a></h3><p>Identity method for the record ID</p><ul><li><strong>@return</strong> [PrimaryKey] The ID</li></ul><p><strong>Example</strong> Fetching the record&#39;s ID</p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">id</span></span>
<span class="line"></span></code></pre></div><h3 id="def-id-id-pk" tabindex="-1">def id=<code>(id : Pk)</code> <a class="header-anchor" href="#def-id-id-pk" aria-hidden="true">#</a></h3><p>Set the record&#39;s ID</p><ul><li><strong>@param</strong> id [PrimaryKey] The ID</li></ul><p><strong>Example</strong> Setting the record&#39;s ID</p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">id </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span></code></pre></div><h3 id="def-persisted" tabindex="-1">def persisted? <a class="header-anchor" href="#def-persisted" aria-hidden="true">#</a></h3><p>Check if the record has been persisted to the database</p><ul><li><strong>@return</strong> [Bool] True if the record has an ID, false otherwise</li></ul><p><strong>Example</strong> Checking if the record is persisted</p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">persisted?</span></span>
<span class="line"></span></code></pre></div><h3 id="def-reload" tabindex="-1">def reload! <a class="header-anchor" href="#def-reload" aria-hidden="true">#</a></h3><p>Define instance-level methods for querying and manipulating data Fetch the record&#39;s ID or raise an error if it&#39;s nil</p><ul><li><strong>@return</strong> [PrimaryKey] The ID</li></ul><p><strong>Example</strong> Fetching the record&#39;s ID</p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">reload!</span></span>
<span class="line"></span></code></pre></div><h3 id="def-save" tabindex="-1">def save <a class="header-anchor" href="#def-save" aria-hidden="true">#</a></h3><p>Define instance-level methods for saving and deleting records Save the record to the database or update it if it already exists</p><ul><li><strong>@return</strong> [Nil]</li></ul><p><strong>Example</strong> Saving the record</p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">save</span></span>
<span class="line"></span></code></pre></div><h3 id="def-update-fields-hash-symbol-db-any" tabindex="-1">def update<code>(fields : Hash(Symbol, DB::Any))</code> <a class="header-anchor" href="#def-update-fields-hash-symbol-db-any" aria-hidden="true">#</a></h3><p>Delete the record from the database if it exists</p><ul><li><strong>@return</strong> [Nil]</li></ul><p><strong>Example</strong> Deleting the record</p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">delete</span></span>
<span class="line"></span></code></pre></div><h3 id="def-update" tabindex="-1">def update <a class="header-anchor" href="#def-update" aria-hidden="true">#</a></h3><p>Update the record with the given record object</p><p><strong>Example</strong> Updating the record</p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">bob </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(name:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Bob</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">email:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> [email protected]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">id </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> bob</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">save</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">bob</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">reload!</span></span>
<span class="line"><span style="color:#BABED8;">bon</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">name </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Juan</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">bob</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">update</span></span>
<span class="line"></span></code></pre></div><h3 id="def-update-1" tabindex="-1">def update <a class="header-anchor" href="#def-update-1" aria-hidden="true">#</a></h3><p>Update the record with the given fields</p><ul><li><strong>@param</strong> fields [Hash(Symbol, DB::Any)] The fields to update</li><li><strong>@return</strong> [Nil]</li></ul><p><strong>Example</strong> Updating the record</p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">update</span><span style="color:#89DDFF;">(name:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Alice</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">email:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> [email protected]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>:::</p>`,56),c=[p,r];function i(d,y,D,F,B,h){return a(),n("div",null,c)}const E=e(o,[["render",i]]);export{f as __pageData,E as default};
