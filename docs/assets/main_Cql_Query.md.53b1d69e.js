import{_ as a,o as e,c as n,x as s,a as l,N as o}from"./app.b139ab4d.js";import"./chunks/theme.1ff6d68a.js";const f=JSON.parse('{"title":"Cql::Query","description":"","frontmatter":{"title":"Cql::Query"},"headers":[{"level":2,"title":"Constructors","slug":"constructors","link":"#constructors","children":[{"level":3,"title":"def new(schema : Schema)","slug":"def-new-schema-schema","link":"#def-new-schema-schema","children":[]}]},{"level":2,"title":"Instance Methods","slug":"instance-methods","link":"#instance-methods","children":[{"level":3,"title":"def aggr_columns","slug":"def-aggr-columns","link":"#def-aggr-columns","children":[]},{"level":3,"title":"def all(as as_kind)","slug":"def-all-as-as-kind","link":"#def-all-as-as-kind","children":[]},{"level":3,"title":"def all!(as as_kind)","slug":"def-all-as-as-kind-1","link":"#def-all-as-as-kind-1","children":[]},{"level":3,"title":"def avg(column : Symbol)","slug":"def-avg-column-symbol","link":"#def-avg-column-symbol","children":[]},{"level":3,"title":"def build","slug":"def-build","link":"#def-build","children":[]},{"level":3,"title":"def columns","slug":"def-columns","link":"#def-columns","children":[]},{"level":3,"title":"def count(column : Symbol = :*)","slug":"def-count-column-symbol","link":"#def-count-column-symbol","children":[]},{"level":3,"title":"def distinct","slug":"def-distinct","link":"#def-distinct","children":[]},{"level":3,"title":"def distinct?","slug":"def-distinct-1","link":"#def-distinct-1","children":[]},{"level":3,"title":"def each(as as_kind, &)","slug":"def-each-as-as-kind","link":"#def-each-as-as-kind","children":[]},{"level":3,"title":"def first(as as_kind)","slug":"def-first-as-as-kind","link":"#def-first-as-as-kind","children":[]},{"level":3,"title":"def first!(as as_kind)","slug":"def-first-as-as-kind-1","link":"#def-first-as-as-kind-1","children":[]},{"level":3,"title":"def from(*tbls : Symbol)","slug":"def-from-tbls-symbol","link":"#def-from-tbls-symbol","children":[]},{"level":3,"title":"def get(as as_kind)","slug":"def-get-as-as-kind","link":"#def-get-as-as-kind","children":[]},{"level":3,"title":"def group(*columns)","slug":"def-group-columns","link":"#def-group-columns","children":[]},{"level":3,"title":"def group_by","slug":"def-group-by","link":"#def-group-by","children":[]},{"level":3,"title":"def having","slug":"def-having","link":"#def-having","children":[]},{"level":3,"title":"def having","slug":"def-having-1","link":"#def-having-1","children":[]},{"level":3,"title":"def inner(table : Symbol, on : Hash(Cql::BaseColumn, Cql::BaseColumn | DB::Any))","slug":"def-inner-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any","link":"#def-inner-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any","children":[]},{"level":3,"title":"def inner(table : Symbol, &)","slug":"def-inner-table-symbol","link":"#def-inner-table-symbol","children":[]},{"level":3,"title":"def joins","slug":"def-joins","link":"#def-joins","children":[]},{"level":3,"title":"def left(table : Symbol, on : Hash(Cql::BaseColumn, Cql::BaseColumn | DB::Any))","slug":"def-left-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any","link":"#def-left-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any","children":[]},{"level":3,"title":"def left(table : Symbol, &)","slug":"def-left-table-symbol","link":"#def-left-table-symbol","children":[]},{"level":3,"title":"def limit(value : Int32)","slug":"def-limit-value-int32","link":"#def-limit-value-int32","children":[]},{"level":3,"title":"def limit","slug":"def-limit","link":"#def-limit","children":[]},{"level":3,"title":"def max(column : Symbol)","slug":"def-max-column-symbol","link":"#def-max-column-symbol","children":[]},{"level":3,"title":"def min(column : Symbol)","slug":"def-min-column-symbol","link":"#def-min-column-symbol","children":[]},{"level":3,"title":"def offset(value : Int32)","slug":"def-offset-value-int32","link":"#def-offset-value-int32","children":[]},{"level":3,"title":"def offset","slug":"def-offset","link":"#def-offset","children":[]},{"level":3,"title":"def order(*fields)","slug":"def-order-fields","link":"#def-order-fields","children":[]},{"level":3,"title":"def order","slug":"def-order","link":"#def-order","children":[]},{"level":3,"title":"def order_by","slug":"def-order-by","link":"#def-order-by","children":[]},{"level":3,"title":"def right(table : Symbol, on : Hash(Cql::BaseColumn, Cql::BaseColumn | DB::Any))","slug":"def-right-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any","link":"#def-right-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any","children":[]},{"level":3,"title":"def right(table : Symbol, &)","slug":"def-right-table-symbol","link":"#def-right-table-symbol","children":[]},{"level":3,"title":"def select(*columns : Symbol)","slug":"def-select-columns-symbol","link":"#def-select-columns-symbol","children":[]},{"level":3,"title":"def select","slug":"def-select","link":"#def-select","children":[]},{"level":3,"title":"def sum(column : Symbol)","slug":"def-sum-column-symbol","link":"#def-sum-column-symbol","children":[]},{"level":3,"title":"def tables","slug":"def-tables","link":"#def-tables","children":[]},{"level":3,"title":"def to_sql(gen = @schema.gen)","slug":"def-to-sql-gen-schema-gen","link":"#def-to-sql-gen-schema-gen","children":[]},{"level":3,"title":"def where(hash : Hash(Symbol, DB::Any))","slug":"def-where-hash-hash-symbol-db-any","link":"#def-where-hash-hash-symbol-db-any","children":[]},{"level":3,"title":"def where","slug":"def-where","link":"#def-where","children":[]},{"level":3,"title":"def where","slug":"def-where-1","link":"#def-where-1","children":[]},{"level":3,"title":"def where","slug":"def-where-2","link":"#def-where-2","children":[]}]},{"level":2,"title":"Macros","slug":"macros","link":"#macros","children":[{"level":3,"title":"macro method_missing(call)","slug":"macro-method-missing-call","link":"#macro-method-missing-call","children":[]}]}],"relativePath":"main/Cql/Query.md","lastUpdated":1723931959000}'),t={name:"main/Cql/Query.md"},r=s("div",null,[s("h1",{id:"class-cql-query",tabindex:"-1"},[l("class Cql::Query "),s("a",{class:"header-anchor",href:"#class-cql-query","aria-hidden":"true"},"#")]),s("p",null,[s("code",null,"Reference"),l(" < "),s("code",null,"Object")]),s("p",null,[l("The "),s("code",null,"Query"),l(" class is responsible for building SQL queries in a structured manner. It holds various components like selected columns, tables, conditions, and more. It provides methods to execute the query and return results.")]),s("p",null,[s("strong",null,"Example"),l(" Creating a new query")]),s("div",{class:"language-crystal"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"crystal"),s("pre",{"v-pre":"",class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"schema "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Cql"),s("span",{style:{color:"#89DDFF"}},"::"),s("span",{style:{color:"#FFCB6B"}},"Schema"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#BABED8"}},"new")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FFCB6B"}},"Cql"),s("span",{style:{color:"#89DDFF"}},"::"),s("span",{style:{color:"#FFCB6B"}},"Query"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"new"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#BABED8"}},"schema"),s("span",{style:{color:"#89DDFF"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"query"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"select"),s("span",{style:{color:"#89DDFF"}},"(:name,"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},":age)."),s("span",{style:{color:"#82AAFF"}},"from"),s("span",{style:{color:"#89DDFF"}},"(:users)."),s("span",{style:{color:"#82AAFF"}},"where"),s("span",{style:{color:"#89DDFF"}},"(name:"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"John"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},")."),s("span",{style:{color:"#82AAFF"}},"all"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#FFCB6B"}},"User"),s("span",{style:{color:"#89DDFF"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"=>"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},"[{"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"name"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},"=>"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"John"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"age"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},"=>"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#F78C6C"}},"30"),s("span",{style:{color:"#89DDFF"}},"}]")]),l(`
`),s("span",{class:"line"})])])]),s("p",null,[s("strong",null,"Example"),l(" Executing a query and iterating over results")]),s("div",{class:"language-crystal"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"crystal"),s("pre",{"v-pre":"",class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"schema "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Cql"),s("span",{style:{color:"#89DDFF"}},"::"),s("span",{style:{color:"#FFCB6B"}},"Schema"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#BABED8"}},"new")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"query "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Cql"),s("span",{style:{color:"#89DDFF"}},"::"),s("span",{style:{color:"#FFCB6B"}},"Query"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"new"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#BABED8"}},"schema"),s("span",{style:{color:"#89DDFF"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"query"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"select"),s("span",{style:{color:"#89DDFF"}},"(:name,"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},":age)."),s("span",{style:{color:"#82AAFF"}},"from"),s("span",{style:{color:"#89DDFF"}},"(:users)."),s("span",{style:{color:"#82AAFF"}},"where"),s("span",{style:{color:"#89DDFF"}},"(name:"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"John"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},")."),s("span",{style:{color:"#82AAFF"}},"each"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#FFCB6B"}},"User"),s("span",{style:{color:"#89DDFF"}},")"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"do "),s("span",{style:{color:"#89DDFF"}},"|"),s("span",{style:{color:"#BABED8"}},"user"),s("span",{style:{color:"#89DDFF"}},"|")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#82AAFF"}},"puts"),s("span",{style:{color:"#BABED8"}}," user"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#BABED8"}},"name")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF","font-style":"italic"}},"end")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"=>"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"John")]),l(`
`),s("span",{class:"line"})])])]),s("details",{class:"details custom-block"},[s("summary",null,"Table of Contents"),s("nav",{class:"table-of-contents"},[s("ul",null,[s("li",null,[s("a",{href:"#constructors"},"Constructors"),s("ul",null,[s("li",null,[s("a",{href:"#def-new-schema-schema"},"def new(schema : Schema)")])])]),s("li",null,[s("a",{href:"#instance-methods"},"Instance Methods"),s("ul",null,[s("li",null,[s("a",{href:"#def-aggr-columns"},"def aggr_columns")]),s("li",null,[s("a",{href:"#def-all-as-as-kind"},"def all(as as_kind)")]),s("li",null,[s("a",{href:"#def-all-as-as-kind-1"},"def all!(as as_kind)")]),s("li",null,[s("a",{href:"#def-avg-column-symbol"},"def avg(column : Symbol)")]),s("li",null,[s("a",{href:"#def-build"},"def build")]),s("li",null,[s("a",{href:"#def-columns"},"def columns")]),s("li",null,[s("a",{href:"#def-count-column-symbol"},"def count(column : Symbol = :*)")]),s("li",null,[s("a",{href:"#def-distinct"},"def distinct")]),s("li",null,[s("a",{href:"#def-distinct-1"},"def distinct?")]),s("li",null,[s("a",{href:"#def-each-as-as-kind"},"def each(as as_kind, &)")]),s("li",null,[s("a",{href:"#def-first-as-as-kind"},"def first(as as_kind)")]),s("li",null,[s("a",{href:"#def-first-as-as-kind-1"},"def first!(as as_kind)")]),s("li",null,[s("a",{href:"#def-from-tbls-symbol"},"def from(*tbls : Symbol)")]),s("li",null,[s("a",{href:"#def-get-as-as-kind"},"def get(as as_kind)")]),s("li",null,[s("a",{href:"#def-group-columns"},"def group(*columns)")]),s("li",null,[s("a",{href:"#def-group-by"},"def group_by")]),s("li",null,[s("a",{href:"#def-having"},"def having")]),s("li",null,[s("a",{href:"#def-having-1"},"def having")]),s("li",null,[s("a",{href:"#def-inner-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any"},"def inner(table : Symbol, on : Hash(Cql::BaseColumn, Cql::BaseColumn | DB::Any))")]),s("li",null,[s("a",{href:"#def-inner-table-symbol"},"def inner(table : Symbol, &)")]),s("li",null,[s("a",{href:"#def-joins"},"def joins")]),s("li",null,[s("a",{href:"#def-left-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any"},"def left(table : Symbol, on : Hash(Cql::BaseColumn, Cql::BaseColumn | DB::Any))")]),s("li",null,[s("a",{href:"#def-left-table-symbol"},"def left(table : Symbol, &)")]),s("li",null,[s("a",{href:"#def-limit-value-int32"},"def limit(value : Int32)")]),s("li",null,[s("a",{href:"#def-limit"},"def limit")]),s("li",null,[s("a",{href:"#def-max-column-symbol"},"def max(column : Symbol)")]),s("li",null,[s("a",{href:"#def-min-column-symbol"},"def min(column : Symbol)")]),s("li",null,[s("a",{href:"#def-offset-value-int32"},"def offset(value : Int32)")]),s("li",null,[s("a",{href:"#def-offset"},"def offset")]),s("li",null,[s("a",{href:"#def-order-fields"},"def order(*fields)")]),s("li",null,[s("a",{href:"#def-order"},"def order")]),s("li",null,[s("a",{href:"#def-order-by"},"def order_by")]),s("li",null,[s("a",{href:"#def-right-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any"},"def right(table : Symbol, on : Hash(Cql::BaseColumn, Cql::BaseColumn | DB::Any))")]),s("li",null,[s("a",{href:"#def-right-table-symbol"},"def right(table : Symbol, &)")]),s("li",null,[s("a",{href:"#def-select-columns-symbol"},"def select(*columns : Symbol)")]),s("li",null,[s("a",{href:"#def-select"},"def select")]),s("li",null,[s("a",{href:"#def-sum-column-symbol"},"def sum(column : Symbol)")]),s("li",null,[s("a",{href:"#def-tables"},"def tables")]),s("li",null,[s("a",{href:"#def-to-sql-gen-schema-gen"},"def to_sql(gen = @schema.gen)")]),s("li",null,[s("a",{href:"#def-where-hash-hash-symbol-db-any"},"def where(hash : Hash(Symbol, DB::Any))")]),s("li",null,[s("a",{href:"#def-where"},"def where")]),s("li",null,[s("a",{href:"#def-where-1"},"def where")]),s("li",null,[s("a",{href:"#def-where-2"},"def where")])])]),s("li",null,[s("a",{href:"#macros"},"Macros"),s("ul",null,[s("li",null,[s("a",{href:"#macro-method-missing-call"},"macro method_missing(call)")])])])])])])],-1),p=o(`<h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-hidden="true">#</a></h2><h3 id="def-new-schema-schema" tabindex="-1">def new<code>(schema : Schema)</code> <a class="header-anchor" href="#def-new-schema-schema" aria-hidden="true">#</a></h3><p>Initializes the <code>Query</code> object with the provided schema.</p><ul><li><strong>@param</strong> schema [Schema] The schema object to use for the query</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong> Creating a new query</p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">schema </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Schema</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">new</span></span>
<span class="line"><span style="color:#BABED8;">query </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">schema</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">#&lt;Cql::Query:0x00007f8b1b0b3b00&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="instance-methods" tabindex="-1">Instance Methods <a class="header-anchor" href="#instance-methods" aria-hidden="true">#</a></h2><h3 id="def-aggr-columns" tabindex="-1">def aggr_columns <a class="header-anchor" href="#def-aggr-columns" aria-hidden="true">#</a></h3><h3 id="def-all-as-as-kind" tabindex="-1">def all<code>(as as_kind)</code> <a class="header-anchor" href="#def-all-as-as-kind" aria-hidden="true">#</a></h3><p>Executes the query and returns all records.</p><ul><li><strong>@param</strong> as [Type] The type to cast the results to</li><li><strong>@return</strong> [Array(Type)] The results of the query</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">schema </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Schema</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">new</span></span>
<span class="line"><span style="color:#BABED8;">query </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">schema</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">select</span><span style="color:#89DDFF;">(:name,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">:age).</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:users).</span><span style="color:#82AAFF;">all</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[&lt;</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0x00007f8b1b0b3b00</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">name=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">age=</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">&gt;,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0x00007f8b1b0b3b00</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">name=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Jane</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">age=</span><span style="color:#F78C6C;">25</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"></span></code></pre></div><h3 id="def-all-as-as-kind-1" tabindex="-1">def all!<code>(as as_kind)</code> <a class="header-anchor" href="#def-all-as-as-kind-1" aria-hidden="true">#</a></h3><ul><li><strong>@param</strong> as [Type] The type to cast the results to</li><li><strong>@return</strong> [Array(Type)] The results of the query</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">schema </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Schema</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">new</span></span>
<span class="line"><span style="color:#BABED8;">query </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">schema</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">select</span><span style="color:#89DDFF;">(:name,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">:age).</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:users).</span><span style="color:#82AAFF;">all!</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[&lt;</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0x00007f8b1b0b3b00</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">name=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">age=</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">&gt;,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0x00007f8b1b0b3b00</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">name=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Jane</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">age=</span><span style="color:#F78C6C;">25</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"></span></code></pre></div><h3 id="def-avg-column-symbol" tabindex="-1">def avg<code>(column : Symbol)</code> <a class="header-anchor" href="#def-avg-column-symbol" aria-hidden="true">#</a></h3><p>Adds an AVG aggregate function to the query.</p><ul><li><strong>@param</strong> column [Symbol] The column to average</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">avg</span><span style="color:#89DDFF;">(:rating)</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT AVG(rating) FROM users</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-build" tabindex="-1">def build <a class="header-anchor" href="#def-build" aria-hidden="true">#</a></h3><p>Builds the final query expression.</p><ul><li><strong>@return</strong> [Expression::Query] The query expression</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">build</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">#&lt;Expression::Query:0x00007f8b1b0b3b00&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-columns" tabindex="-1">def columns <a class="header-anchor" href="#def-columns" aria-hidden="true">#</a></h3><h3 id="def-count-column-symbol" tabindex="-1">def count<code>(column : Symbol = :*)</code> <a class="header-anchor" href="#def-count-column-symbol" aria-hidden="true">#</a></h3><p>Adds a COUNT aggregate function to the query.</p><ul><li><strong>@param</strong> column [Symbol] The column to count</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">count</span><span style="color:#89DDFF;">(:id)</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT COUNT(id) FROM users</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-distinct" tabindex="-1">def distinct <a class="header-anchor" href="#def-distinct" aria-hidden="true">#</a></h3><p>Sets the distinct flag to true.</p><ul><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:users).</span><span style="color:#BABED8;">distinct</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT DISTINCT * FROM users</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-distinct-1" tabindex="-1">def distinct? <a class="header-anchor" href="#def-distinct-1" aria-hidden="true">#</a></h3><h3 id="def-each-as-as-kind" tabindex="-1">def each<code>(as as_kind, &amp;)</code> <a class="header-anchor" href="#def-each-as-as-kind" aria-hidden="true">#</a></h3><p>Iterates over each result and yields it to the provided block. Example:</p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">each</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">do </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">puts</span><span style="color:#BABED8;"> user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">name</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">John</span></span>
<span class="line"></span></code></pre></div><h3 id="def-first-as-as-kind" tabindex="-1">def first<code>(as as_kind)</code> <a class="header-anchor" href="#def-first-as-as-kind" aria-hidden="true">#</a></h3><p>Executes the query and returns the first record.</p><ul><li><strong>@param</strong> as [Type] The type to cast the result to</li><li><strong>@return</strong> [Type] The first result of the query</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">schema </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Schema</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">new</span></span>
<span class="line"><span style="color:#BABED8;">query </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">schema</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">select</span><span style="color:#89DDFF;">(:name,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">:age).</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:users).</span><span style="color:#82AAFF;">first</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0x00007f8b1b0b3b00</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">name=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">age=</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-first-as-as-kind-1" tabindex="-1">def first!<code>(as as_kind)</code> <a class="header-anchor" href="#def-first-as-as-kind-1" aria-hidden="true">#</a></h3><ul><li><strong>@param</strong> as [Type] The type to cast the result to</li><li><strong>@return</strong> [Type] The first result of the query</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">schema </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Schema</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">new</span></span>
<span class="line"><span style="color:#BABED8;">query </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">schema</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">select</span><span style="color:#89DDFF;">(:name,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">:age).</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:users).</span><span style="color:#82AAFF;">first!</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0x00007f8b1b0b3b00</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">name=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">age=</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-from-tbls-symbol" tabindex="-1">def from<code>(*tbls : Symbol)</code> <a class="header-anchor" href="#def-from-tbls-symbol" aria-hidden="true">#</a></h3><p>Specifies the tables to select from.</p><ul><li><strong>@param</strong> tbls [Symbol*] The tables to select from</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:users,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">:orders)</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users, orders</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-get-as-as-kind" tabindex="-1">def get<code>(as as_kind)</code> <a class="header-anchor" href="#def-get-as-as-kind" aria-hidden="true">#</a></h3><p>Executes the query and returns a scalar value.</p><ul><li><strong>@param</strong> as [Type] The type to cast the result to</li><li><strong>@return</strong> [Type] The scalar result of the query Example: <code>query.get(Int64)</code></li></ul><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">schema </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Schema</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">new</span></span>
<span class="line"><span style="color:#BABED8;">query </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">schema</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">select</span><span style="color:#89DDFF;">(:count).</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:users).</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Int64</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">10</span></span>
<span class="line"></span></code></pre></div><h3 id="def-group-columns" tabindex="-1">def group<code>(*columns)</code> <a class="header-anchor" href="#def-group-columns" aria-hidden="true">#</a></h3><p>Specifies the columns to group by.</p><ul><li><strong>@param</strong> columns [Symbol*] The columns to group by</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:products).</span><span style="color:#82AAFF;">group</span><span style="color:#89DDFF;">(:category)</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM products GROUP BY category</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-group-by" tabindex="-1">def group_by <a class="header-anchor" href="#def-group-by" aria-hidden="true">#</a></h3><h3 id="def-having" tabindex="-1">def having <a class="header-anchor" href="#def-having" aria-hidden="true">#</a></h3><h3 id="def-having-1" tabindex="-1">def having <a class="header-anchor" href="#def-having-1" aria-hidden="true">#</a></h3><p>Adds a HAVING condition to the grouped results.</p><ul><li><strong>@param</strong> block [Block] The block to evaluate the having condition</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:products).</span><span style="color:#82AAFF;">group</span><span style="color:#89DDFF;">(:category).</span><span style="color:#BABED8;">having </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">avg</span><span style="color:#89DDFF;">(:price)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">100</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM products GROUP BY category HAVING AVG(price) &gt; 100</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-inner-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any" tabindex="-1">def inner<code>(table : Symbol, on : Hash(Cql::BaseColumn, Cql::BaseColumn | DB::Any))</code> <a class="header-anchor" href="#def-inner-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any" aria-hidden="true">#</a></h3><p>Adds an INNER JOIN to the query.</p><ul><li><strong>@param</strong> table [Symbol] The table to join</li><li><strong>@param</strong> on [Hash(Cql::BaseColumn, Cql::BaseColumn | DB::Any)] The join condition</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">inner</span><span style="color:#89DDFF;">(:orders,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">on:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> users</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">id </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> orders</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">user_id </span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users INNER JOIN orders ON users.id = orders.user_id</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-inner-table-symbol" tabindex="-1">def inner<code>(table : Symbol, &amp;)</code> <a class="header-anchor" href="#def-inner-table-symbol" aria-hidden="true">#</a></h3><p>Adds an INNER JOIN to the query.</p><ul><li><strong>@param</strong> table [Symbol] The table to join</li><li><strong>@yield</strong> [FilterBuilder] The block to build the conditions</li><li><strong>@return</strong> [Query] The query object</li><li><strong>@raise</strong> [Exception] if the block is not provided</li><li><strong>@raise</strong> [Exception] if the block does not return an expression</li><li><strong>@raise</strong> [Exception] if the column does not exist</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">inner</span><span style="color:#89DDFF;">(:orders)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">w</span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> w</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">users</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">id </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> orders</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">user_id </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users INNER JOIN orders ON users.id = orders.user_id</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-joins" tabindex="-1">def joins <a class="header-anchor" href="#def-joins" aria-hidden="true">#</a></h3><h3 id="def-left-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any" tabindex="-1">def left<code>(table : Symbol, on : Hash(Cql::BaseColumn, Cql::BaseColumn | DB::Any))</code> <a class="header-anchor" href="#def-left-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any" aria-hidden="true">#</a></h3><p>Adds a LEFT JOIN to the query.</p><ul><li><strong>@param</strong> table [Symbol] The table to join</li><li><strong>@param</strong> on [Hash(Cql::BaseColumn, Cql::BaseColumn | DB::Any)] The join condition</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">left</span><span style="color:#89DDFF;">(:orders,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">on:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> users</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">id </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> orders</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">user_id </span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users LEFT JOIN orders ON users.id = orders.user_id</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-left-table-symbol" tabindex="-1">def left<code>(table : Symbol, &amp;)</code> <a class="header-anchor" href="#def-left-table-symbol" aria-hidden="true">#</a></h3><p>Adds a LEFT JOIN to the query using a block.</p><ul><li><strong>@param</strong> table [Symbol] The table to join</li><li><strong>@yield</strong> [FilterBuilder] The block to build the conditions</li><li><strong>@return</strong> [Query] The query object</li><li><strong>@raise</strong> [Exception] if the block is not provided</li><li><strong>@raise</strong> [Exception] if the block does not return an expression</li><li><strong>@raise</strong> [Exception] if the column does not exist</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">left</span><span style="color:#89DDFF;">(:orders)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">w</span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> w</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">users</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">id </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> orders</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">user_id </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users LEFT JOIN orders ON users.id = orders.user_id</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-limit-value-int32" tabindex="-1">def limit<code>(value : Int32)</code> <a class="header-anchor" href="#def-limit-value-int32" aria-hidden="true">#</a></h3><p>Sets the limit for the number of records to return.</p><ul><li><strong>@param</strong> value [Int32] The limit value</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:users).</span><span style="color:#82AAFF;">limit</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users LIMIT 10</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-limit" tabindex="-1">def limit <a class="header-anchor" href="#def-limit" aria-hidden="true">#</a></h3><h3 id="def-max-column-symbol" tabindex="-1">def max<code>(column : Symbol)</code> <a class="header-anchor" href="#def-max-column-symbol" aria-hidden="true">#</a></h3><p>Adds a MAX aggregate function to the query.</p><ul><li><strong>@param</strong> column [Symbol] The column to find the maximum value of</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:users).</span><span style="color:#82AAFF;">max</span><span style="color:#89DDFF;">(:price)</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT MAX(price) FROM users</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-min-column-symbol" tabindex="-1">def min<code>(column : Symbol)</code> <a class="header-anchor" href="#def-min-column-symbol" aria-hidden="true">#</a></h3><p>Adds a MIN aggregate function to the query.</p><ul><li><strong>@param</strong> column [Symbol] The column to find the minimum value of</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">min</span><span style="color:#89DDFF;">(:price)</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT MIN(price) FROM users</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-offset-value-int32" tabindex="-1">def offset<code>(value : Int32)</code> <a class="header-anchor" href="#def-offset-value-int32" aria-hidden="true">#</a></h3><p>Sets the offset for the query.</p><ul><li><strong>@param</strong> value [Int32] The offset value</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:users).</span><span style="color:#82AAFF;">limit</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">offset</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users LIMIT 10 OFFSET 20</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-offset" tabindex="-1">def offset <a class="header-anchor" href="#def-offset" aria-hidden="true">#</a></h3><h3 id="def-order-fields" tabindex="-1">def order<code>(*fields)</code> <a class="header-anchor" href="#def-order-fields" aria-hidden="true">#</a></h3><p>Specifies the columns to order by.</p><ul><li><strong>@param</strong> fields [Symbol*] The columns to order by</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">order</span><span style="color:#89DDFF;">(:name,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">:age)</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users ORDER BY name, age</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-order" tabindex="-1">def order <a class="header-anchor" href="#def-order" aria-hidden="true">#</a></h3><p>Specifies the columns to order by.</p><ul><li><strong>@param</strong> fields [Hash(Symbol, Symbol)] The columns to order by and their direction</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">order</span><span style="color:#89DDFF;">(name:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">:asc,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">age:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">:desc)</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users ORDER BY name ASC, age DESC</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-order-by" tabindex="-1">def order_by <a class="header-anchor" href="#def-order-by" aria-hidden="true">#</a></h3><h3 id="def-right-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any" tabindex="-1">def right<code>(table : Symbol, on : Hash(Cql::BaseColumn, Cql::BaseColumn | DB::Any))</code> <a class="header-anchor" href="#def-right-table-symbol-on-hash-cql-basecolumn-cql-basecolumn-db-any" aria-hidden="true">#</a></h3><p>Adds a RIGHT JOIN to the query.</p><ul><li><strong>@param</strong> table [Symbol] The table to join</li><li><strong>@param</strong> on [Hash(Cql::BaseColumn, Cql::BaseColumn | DB::Any)] The join condition</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">right</span><span style="color:#89DDFF;">(:orders,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">on:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> users</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">id </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> orders</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">user_id </span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users RIGHT JOIN orders ON users.id = orders.user_id</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-right-table-symbol" tabindex="-1">def right<code>(table : Symbol, &amp;)</code> <a class="header-anchor" href="#def-right-table-symbol" aria-hidden="true">#</a></h3><p>Adds a RIGHT JOIN to the query using a block.</p><ul><li><strong>@param</strong> table [Symbol] The table to join</li><li><strong>@yield</strong> [FilterBuilder] The block to build the conditions</li><li><strong>@return</strong> [Query] The query object</li><li><strong>@raise</strong> [Exception] if the block is not provided</li><li><strong>@raise</strong> [Exception] if the block does not return an expression</li><li><strong>@raise</strong> [Exception] if the column does not exist</li><li><strong>@raise</strong> [Exception] if the value is invalid</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">right</span><span style="color:#89DDFF;">(:orders)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">w</span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> w</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">users</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">id </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> orders</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">user_id </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users RIGHT JOIN orders ON users.id = orders.user_id</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-select-columns-symbol" tabindex="-1">def select<code>(*columns : Symbol)</code> <a class="header-anchor" href="#def-select-columns-symbol" aria-hidden="true">#</a></h3><p>Specifies the columns to select.</p><ul><li><strong>@param</strong> columns [Symbol*] The columns to select</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">select</span><span style="color:#89DDFF;">(:name,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">:age)</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT name, age FROM users</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-select" tabindex="-1">def select <a class="header-anchor" href="#def-select" aria-hidden="true">#</a></h3><p>Specifies the columns to select.</p><ul><li><strong>@param</strong> columns [Array(Symbol)] The columns to select</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:users,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">:address).</span><span style="color:#82AAFF;">select</span><span style="color:#89DDFF;">(users:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[:name,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">:age],</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">address:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[:city,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">:state])</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT users.name, users.age, address.city, address.state FROM users, address</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-sum-column-symbol" tabindex="-1">def sum<code>(column : Symbol)</code> <a class="header-anchor" href="#def-sum-column-symbol" aria-hidden="true">#</a></h3><p>Adds a SUM aggregate function to the query.</p><ul><li><strong>@param</strong> column [Symbol] The column to sum</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">(:total_amount)</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT SUM(total_amount) FROM users</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-tables" tabindex="-1">def tables <a class="header-anchor" href="#def-tables" aria-hidden="true">#</a></h3><h3 id="def-to-sql-gen-schema-gen" tabindex="-1">def to_sql<code>(gen = @schema.gen)</code> <a class="header-anchor" href="#def-to-sql-gen-schema-gen" aria-hidden="true">#</a></h3><p>Converts the query into an SQL string and its corresponding parameters.</p><ul><li><strong>@param</strong> gen [Generator] The generator to use for converting the query</li><li><strong>@return</strong> [Tuple(String, Array(DB::Any))] The SQL query and its parameters</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">to_sql</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users WHERE name = ? AND age = ?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">]}</span></span>
<span class="line"></span></code></pre></div><h3 id="def-where-hash-hash-symbol-db-any" tabindex="-1">def where<code>(hash : Hash(Symbol, DB::Any))</code> <a class="header-anchor" href="#def-where-hash-hash-symbol-db-any" aria-hidden="true">#</a></h3><p>Adds a WHERE condition with a hash of column-value pairs.</p><ul><li><strong>@param</strong> hash [Hash(Symbol, DB::Any)] The hash of column-value pairs</li><li><strong>@return</strong> [Query] The query object</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:users).</span><span style="color:#82AAFF;">where</span><span style="color:#89DDFF;">(name:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">age:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users WHERE name = &#39;John&#39; AND age = 30</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-where" tabindex="-1">def where <a class="header-anchor" href="#def-where" aria-hidden="true">#</a></h3><h3 id="def-where-1" tabindex="-1">def where <a class="header-anchor" href="#def-where-1" aria-hidden="true">#</a></h3><p>Adds a WHERE condition with a block.</p><ul><li><strong>@fields</strong> [FilterBuilder] The block to build the conditions</li><li><strong>@return</strong> [Query] The query object</li><li><strong>@raise</strong> [Exception] if the column does not exist</li><li><strong>@raise</strong> [Exception] if the value is invalid</li><li><strong>@raise</strong> [Exception] if the value is not of the correct type</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:users).</span><span style="color:#82AAFF;">where</span><span style="color:#89DDFF;">(name:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users WHERE name = &#39;John&#39;</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="def-where-2" tabindex="-1">def where <a class="header-anchor" href="#def-where-2" aria-hidden="true">#</a></h3><p>Adds WHERE conditions using a block.</p><ul><li><strong>@yield</strong> [FilterBuilder] The block to build the conditions</li><li><strong>@return</strong> [Query] The query object</li><li><strong>@raise</strong> [Exception] if the block is not provided</li><li><strong>@raise</strong> [Exception] if the block does not return an expression</li><li><strong>@raise</strong> [Exception] if the column does not exist</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(:users).</span><span style="color:#BABED8;">where </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">w</span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> w</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">name </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM users WHERE name = &#39;John&#39;</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="macros" tabindex="-1">Macros <a class="header-anchor" href="#macros" aria-hidden="true">#</a></h2><h3 id="macro-method-missing-call" tabindex="-1">macro method_missing<code>(call)</code> <a class="header-anchor" href="#macro-method-missing-call" aria-hidden="true">#</a></h3><p>:::</p>`,176),c=[r,p];function i(y,d,D,F,u,h){return e(),n("div",null,c)}const B=a(t,[["render",i]]);export{f as __pageData,B as default};
