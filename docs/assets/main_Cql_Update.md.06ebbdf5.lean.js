import{_ as n,o as l,c as o,x as s,a,S as e}from"./app.70057064.js";import"./chunks/theme.88596d17.js";const A=JSON.parse('{"title":"Cql::Update","description":"","frontmatter":{"title":"Cql::Update"},"headers":[{"level":2,"title":"Constructors","slug":"constructors","link":"#constructors","children":[{"level":3,"title":"def new(schema : Schema)","slug":"def-new-schema-schema","link":"#def-new-schema-schema","children":[]}]},{"level":2,"title":"Instance Methods","slug":"instance-methods","link":"#instance-methods","children":[{"level":3,"title":"def back(*columns : Symbol)","slug":"def-back-columns-symbol","link":"#def-back-columns-symbol","children":[]},{"level":3,"title":"def build","slug":"def-build","link":"#def-build","children":[]},{"level":3,"title":"def commit","slug":"def-commit","link":"#def-commit","children":[]},{"level":3,"title":"def set(setters : Hash(Symbol, DB::Any))","slug":"def-set-setters-hash-symbol-db-any","link":"#def-set-setters-hash-symbol-db-any","children":[]},{"level":3,"title":"def set","slug":"def-set","link":"#def-set","children":[]},{"level":3,"title":"def table(table : Symbol)","slug":"def-table-table-symbol","link":"#def-table-table-symbol","children":[]},{"level":3,"title":"def to_sql(gen = @schema.gen)","slug":"def-to-sql-gen-schema-gen","link":"#def-to-sql-gen-schema-gen","children":[]},{"level":3,"title":"def where","slug":"def-where","link":"#def-where","children":[]},{"level":3,"title":"def where(attr : Hash(Symbol, DB::Any))","slug":"def-where-attr-hash-symbol-db-any","link":"#def-where-attr-hash-symbol-db-any","children":[]},{"level":3,"title":"def where","slug":"def-where-1","link":"#def-where-1","children":[]}]}],"relativePath":"main/Cql/Update.md","lastUpdated":1723931959000}'),p={name:"main/Cql/Update.md"},t=s("div",null,[s("h1",{id:"class-cql-update",tabindex:"-1"},[a("class Cql::Update "),s("a",{class:"header-anchor",href:"#class-cql-update","aria-hidden":"true"},"#")]),s("p",null,[s("code",null,"Reference"),a(" < "),s("code",null,"Object")]),s("p",null,[a("The "),s("code",null,"Cql::Update"),a(" class represents an SQL UPDATE statement.")]),s("p",null,[s("strong",null,"Example")]),s("div",{class:"language-crystal"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"crystal"),s("pre",{"v-pre":"",class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"update "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"Cql"),s("span",{style:{color:"#89DDFF"}},"::"),s("span",{style:{color:"#FFCB6B"}},"Update"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"new"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#BABED8"}},"schema"),s("span",{style:{color:"#89DDFF"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"table"),s("span",{style:{color:"#89DDFF"}},"(:users)")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"set"),s("span",{style:{color:"#89DDFF"}},"(name:"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"John"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},"age:"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#F78C6C"}},"30"),s("span",{style:{color:"#89DDFF"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#BABED8"}},"where "),s("span",{style:{color:"#89DDFF"}},"{"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},"|"),s("span",{style:{color:"#BABED8"}},"w"),s("span",{style:{color:"#89DDFF"}},"|"),s("span",{style:{color:"#BABED8"}}," w"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#BABED8"}},"id "),s("span",{style:{color:"#89DDFF"}},"=="),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#F78C6C"}},"1"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},"}")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"  "),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#BABED8"}},"commit")]),a(`
`),s("span",{class:"line"})])])]),s("h2",{id:"usage",tabindex:"-1"},[a("Usage "),s("a",{class:"header-anchor",href:"#usage","aria-hidden":"true"},"#")]),s("ul",null,[s("li",null,[s("code",null,"initialize(schema : Schema)"),a(" - Initializes a new instance of "),s("code",null,"Cql::Update"),a(" with the given schema.")]),s("li",null,[s("code",null,"commit : DB::Result"),a(" - Executes the update query and returns the result.")]),s("li",null,[s("code",null,"to_sql(gen = @schema.gen) : {String, Array(DB::Any)}"),a(" - Generates the SQL query and parameters.")]),s("li",null,[s("code",null,"table(table : Symbol) : self"),a(" - Sets the table to update.")]),s("li",null,[s("code",null,"set(setters : Hash(Symbol, DB::Any)) : self"),a(" - Sets the column values to update using a hash.")]),s("li",null,[s("code",null,"set(**fields) : self"),a(" - Sets the column values to update using keyword arguments.")]),s("li",null,[s("code",null,"where(&block) : self"),a(" - Sets the WHERE clause using a block.")]),s("li",null,[s("code",null,"where(**fields) : self"),a(" - Sets the WHERE clause using keyword arguments.")]),s("li",null,[s("code",null,"back(*columns : Symbol) : self"),a(" - Sets the columns to return after the update.")]),s("li",null,[s("code",null,"build : Expression::Update"),a(" - Builds the "),s("code",null,"Expression::Update"),a(" object.")])]),s("details",{class:"details custom-block"},[s("summary",null,"Table of Contents"),s("nav",{class:"table-of-contents"},[s("ul",null,[s("li",null,[s("a",{href:"#constructors"},"Constructors"),s("ul",null,[s("li",null,[s("a",{href:"#def-new-schema-schema"},"def new(schema : Schema)")])])]),s("li",null,[s("a",{href:"#instance-methods"},"Instance Methods"),s("ul",null,[s("li",null,[s("a",{href:"#def-back-columns-symbol"},"def back(*columns : Symbol)")]),s("li",null,[s("a",{href:"#def-build"},"def build")]),s("li",null,[s("a",{href:"#def-commit"},"def commit")]),s("li",null,[s("a",{href:"#def-set-setters-hash-symbol-db-any"},"def set(setters : Hash(Symbol, DB::Any))")]),s("li",null,[s("a",{href:"#def-set"},"def set")]),s("li",null,[s("a",{href:"#def-table-table-symbol"},"def table(table : Symbol)")]),s("li",null,[s("a",{href:"#def-to-sql-gen-schema-gen"},"def to_sql(gen = @schema.gen)")]),s("li",null,[s("a",{href:"#def-where"},"def where")]),s("li",null,[s("a",{href:"#def-where-attr-hash-symbol-db-any"},"def where(attr : Hash(Symbol, DB::Any))")]),s("li",null,[s("a",{href:"#def-where-1"},"def where")])])])])])])],-1),r=e("",54),c=[t,r];function D(F,y,B,i,d,u){return l(),o("div",null,c)}const m=n(p,[["render",D]]);export{A as __pageData,m as default};
