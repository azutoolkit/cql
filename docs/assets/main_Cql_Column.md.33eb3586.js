import{_ as s,o as e,c as a,x as l,a as n,S as o}from"./app.19d9338b.js";import"./chunks/theme.a19b6002.js";const B=JSON.parse('{"title":"Cql::Column(T)","description":"","frontmatter":{"title":"Cql::Column(T)"},"headers":[{"level":2,"title":"Constructors","slug":"constructors","link":"#constructors","children":[{"level":3,"title":"def new(name : Symbol, type : T.class, as_name : String | Nil = nil, null : Bool = false, default : DB::Any = nil, unique : Bool = false, size : Int32 | Nil = nil, index : Index | Nil = nil)","slug":"def-new-name-symbol-type-t-class-as-name-string-nil-nil-null-bool-false-default-db-any-nil-unique-bool-false-size-int32-nil-nil-index-index-nil-nil","link":"#def-new-name-symbol-type-t-class-as-name-string-nil-nil-null-bool-false-default-db-any-nil-unique-bool-false-size-int32-nil-nil-index-index-nil-nil","children":[]}]},{"level":2,"title":"Instance Methods","slug":"instance-methods","link":"#instance-methods","children":[{"level":3,"title":"def expression","slug":"def-expression","link":"#def-expression","children":[]},{"level":3,"title":"def validate!(value)","slug":"def-validate-value","link":"#def-validate-value","children":[]}]}],"relativePath":"main/Cql/Column.md","lastUpdated":1723931959000}'),t={name:"main/Cql/Column.md"},i=l("div",null,[l("h1",{id:"class-cql-column-t",tabindex:"-1"},[n("class Cql::Column(T) "),l("a",{class:"header-anchor",href:"#class-cql-column-t","aria-hidden":"true"},"#")]),l("p",null,[l("code",null,"Cql::BaseColumn"),n(" < "),l("code",null,"Reference"),n(" < "),l("code",null,"Object")]),l("p",null,"A column in a table This class represents a column in a table It provides methods for setting the column type, default value, and constraints It also provides methods for building expressions"),l("p",null,[l("strong",null,"Example"),n(" Creating a new column")]),l("div",{class:"language-crystal"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"crystal"),l("pre",{"v-pre":"",class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#BABED8"}},"schema"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#BABED8"}},"build "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"do")]),n(`
`),l("span",{class:"line"},[l("span",{style:{color:"#BABED8"}},"  table "),l("span",{style:{color:"#89DDFF"}},":users"),l("span",{style:{color:"#BABED8"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"do")]),n(`
`),l("span",{class:"line"},[l("span",{style:{color:"#BABED8"}},"    column "),l("span",{style:{color:"#89DDFF"}},":name,"),l("span",{style:{color:"#BABED8"}}," "),l("span",{style:{color:"#FFCB6B"}},"String"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#BABED8"}}," "),l("span",{style:{color:"#89DDFF"}},"null:"),l("span",{style:{color:"#BABED8"}}," "),l("span",{style:{color:"#FF9CAC"}},"false"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#BABED8"}}," "),l("span",{style:{color:"#89DDFF"}},"default:"),l("span",{style:{color:"#BABED8"}}," "),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"John"),l("span",{style:{color:"#89DDFF"}},'"')]),n(`
`),l("span",{class:"line"},[l("span",{style:{color:"#BABED8"}},"    column "),l("span",{style:{color:"#89DDFF"}},":age,"),l("span",{style:{color:"#BABED8"}}," "),l("span",{style:{color:"#FFCB6B"}},"Int32"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#BABED8"}}," "),l("span",{style:{color:"#89DDFF"}},"null:"),l("span",{style:{color:"#BABED8"}}," "),l("span",{style:{color:"#FF9CAC"}},"false")]),n(`
`),l("span",{class:"line"},[l("span",{style:{color:"#BABED8"}},"  "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"end")]),n(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF","font-style":"italic"}},"end")]),n(`
`),l("span",{class:"line"})])])]),l("details",{class:"details custom-block"},[l("summary",null,"Table of Contents"),l("nav",{class:"table-of-contents"},[l("ul",null,[l("li",null,[l("a",{href:"#constructors"},"Constructors"),l("ul",null,[l("li",null,[l("a",{href:"#def-new-name-symbol-type-t-class-as-name-string-nil-nil-null-bool-false-default-db-any-nil-unique-bool-false-size-int32-nil-nil-index-index-nil-nil"},"def new(name : Symbol, type : T.class, as_name : String | Nil = nil, null : Bool = false, default : DB::Any = nil, unique : Bool = false, size : Int32 | Nil = nil, index : Index | Nil = nil)")])])]),l("li",null,[l("a",{href:"#instance-methods"},"Instance Methods"),l("ul",null,[l("li",null,[l("a",{href:"#def-expression"},"def expression")]),l("li",null,[l("a",{href:"#def-validate-value"},"def validate!(value)")])])])])])])],-1),r=o(`<h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-hidden="true">#</a></h2><h3 id="def-new-name-symbol-type-t-class-as-name-string-nil-nil-null-bool-false-default-db-any-nil-unique-bool-false-size-int32-nil-nil-index-index-nil-nil" tabindex="-1">def new<code>(name : Symbol, type : T.class, as_name : String | Nil = nil, null : Bool = false, default : DB::Any = nil, unique : Bool = false, size : Int32 | Nil = nil, index : Index | Nil = nil)</code> <a class="header-anchor" href="#def-new-name-symbol-type-t-class-as-name-string-nil-nil-null-bool-false-default-db-any-nil-unique-bool-false-size-int32-nil-nil-index-index-nil-nil" aria-hidden="true">#</a></h3><p>Create a new column instance</p><ul><li><strong>@param</strong> : name (Symbol) - The name of the column</li><li><strong>@param</strong> : type (Any) - The data type of the column</li><li><strong>@param</strong> : as_name (String, nil) - An optional alias for the column</li><li><strong>@param</strong> : null (Bool) - Whether the column allows null values (default: false)</li><li><strong>@param</strong> : default (DB::Any) - The default value for the column (default: nil)</li><li><strong>@param</strong> : unique (Bool) - Whether the column should have a unique constraint (default: false)</li><li><strong>@param</strong> : size (Int32, nil) - The size of the column (default: nil)</li><li><strong>@param</strong> : index (Index, nil) - The index for the column (default: nil)</li><li><strong>@return</strong> : Nil</li><li><strong>@raise</strong> : Cql::Error if the column type is not valid</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">column </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Column</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(:name,</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="instance-methods" tabindex="-1">Instance Methods <a class="header-anchor" href="#instance-methods" aria-hidden="true">#</a></h2><h3 id="def-expression" tabindex="-1">def expression <a class="header-anchor" href="#def-expression" aria-hidden="true">#</a></h3><p>Expressions for this column</p><ul><li><strong>@return</strong> [Expression::ColumnBuilder] the column expression builder</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">column </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Column</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(:name,</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">column</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">expression</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">eq</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="def-validate-value" tabindex="-1">def validate!<code>(value)</code> <a class="header-anchor" href="#def-validate-value" aria-hidden="true">#</a></h3><p>Validate the value</p><ul><li><strong>@param</strong> value [DB::Any] The value to validate</li></ul><p><strong>Example</strong></p><div class="language-crystal"><button title="Copy Code" class="copy"></button><span class="lang">crystal</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">column </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Cql</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Column</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(:name,</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">column</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">validate!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>:::</p>`,18),p=[i,r];function c(d,u,y,D,F,m){return e(),a("div",null,p)}const g=s(t,[["render",c]]);export{B as __pageData,g as default};
